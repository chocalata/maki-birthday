---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";

let okAnimations = [
	"/img/ok-animation/ok0.png",
	"/img/ok-animation/ok1.png",
	"/img/ok-animation/ok2.png",
	"/img/ok-animation/ok3.png",
];
---

<Layout title="¬°Felicidades!">
	<main class="justify-center text-center text-4xl m-10 xl:text-6xl xl:m-32">
		<h1 class="text-6xl">¬°Holi!</h1>
		<p class="mt-12">Me ha dicho un pajarito que hoy es tu cumplea√±os.</p>
		<p class="mt-12">As√≠ que...</p>
		<p class="mt-12">Pulsa este bot√≥n porfi</p>
		<!--img
			id="img-ok0"
			class="mt-[91px] -mb-1 m-auto w-52"
			src="/img/ok-animation/ok0.png"
			alt="Ok"
		/>
		<img
			id="img-ok1"
			class="-mb-1 m-auto w-52 hidden"
			src="/img/ok-animation/ok1.png"
			alt="Ok2"
		/>
		<img
			id="img-ok2"
			class="-mb-1 m-auto w-52 hidden"
			src="/img/ok-animation/ok2.png"
			alt="Ok3"
		/-->
		<!-- APPLY ASTRO FOR -->
		{
			okAnimations.map((okAnimation, index) => (
				<img
					id={`img-ok${index}`}
					class={`mt-[91px] -mb-1 m-auto w-52 ${index === 0 ? "" : "hidden mt-0"}`}
					src={okAnimation}
					alt="Ok"
					class=
				/>
			))
		}
		<!-- DARLE VAIAS VECES AL BOT√ìN E IR CAMBIANDO LA IMAGEN DICIENDO QUE SIGA PULSANDO PERO AL FINAL TIENE QUE BAJAR M√ÅS -->
		<button
			id="magic-button"
			class="bg-black text-white p-4 rounded-lg click:scale-105"
			>Bot√≥n m√°gico</button
		>
		<!--div class="typing-container">
			<span id="typing-text"></span><span class="cursor"></span>
		</div-->
	</main>
</Layout>

<style>
	typing-container {
		font-size: 2em;
		font-weight: bold;
	}
	.cursor {
		display: inline-block;
		background-color: #000;
		width: 10px;
		height: 0.7em;
		margin-left: 5px;
		animation: blink 1s infinite;
	}
	@keyframes blink {
		0%,
		100% {
			opacity: 1;
		}
		50% {
			opacity: 0;
		}
	}
</style>

<script>
	let okAnimation = 0;
	document.getElementById("magic-button").addEventListener("click", () => {
		const lastImg = document.getElementById(`img-ok${okAnimation}`);

		const newImage = document.getElementById(`img-ok${okAnimation + 1}`);

		if (newImage) {
			lastImg.classList.add("hidden");
			newImage.classList.remove("hidden");
			okAnimation++;
		}
	});

	const words = [
		"Te lamo",
		"Te calmo",
		"Te lavo",
		"Te cuero",
		"Televisor ‚ù§Ô∏è",
		"Te palpo",
		"T√© de tila",
		"Te vaquiero",
		"Te kilogramo",
		"Tequila ‚ù§Ô∏è",
		"Te ablo",
		"Joe... üò¢",
		"Ahora si, perate",
		"Te lo juro que ahora s√≠",
	];

	let wordIndex = 0;
	let charIndex = 0;
	let isDeleting = false;
	const typingSpeed = 60; // Milliseconds per character when typing
	const deletingSpeed = 40; // Milliseconds per character when deleting
	const delayBetweenWords = 1500; // Delay between words in milliseconds

	function getCommonPrefixLength(word1, word2) {
		let commonLength = 0;
		while (
			commonLength < word1.length &&
			commonLength < word2.length &&
			word1[commonLength] === word2[commonLength]
		) {
			commonLength++;
		}
		return commonLength;
	}

	function type() {
		const currentWord = words[wordIndex];
		const nextWord = words[(wordIndex + 1) % words.length];
		const commonPrefixLength = getCommonPrefixLength(currentWord, nextWord);

		if (!isDeleting && charIndex < currentWord.length) {
			// Typing phase
			document.getElementById("typing-text").textContent =
				currentWord.slice(0, charIndex + 1);
			charIndex++;
			setTimeout(type, typingSpeed);
		} else if (isDeleting && charIndex > commonPrefixLength) {
			// Deleting phase - only delete up to the common prefix length
			document.getElementById("typing-text").textContent =
				currentWord.slice(0, charIndex - 1);
			charIndex--;
			setTimeout(type, deletingSpeed);
		} else {
			// Toggle between typing and deleting
			if (!isDeleting) {
				isDeleting = true;
				setTimeout(type, delayBetweenWords);
			} else {
				isDeleting = false;

				let newIndex;
				do {
					newIndex = Math.floor(Math.random() * words.length);
				} while (newIndex === wordIndex); // Ensure it picks a new word

				wordIndex = newIndex;

				setTimeout(type, typingSpeed);
			}
		}
	}

	// Start the typing effect
	type();
</script>
